rules:
  - id: curl-eval
    severity: WARNING
    languages:
      - bash
    message: >
      Data is being eval'd from a curl command. An attacker with control of
      the server in the curl command could inject malicious code into the
      eval, resulting in a system compromise. Avoid eval'ing untrusted data if
      you can. If you must do this, consider checking the SHA sum of the content
      returned by the server to verify its integrity.
    metadata:
      owasp:
        - A03:2021 - Injection
      cwe:
        - CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code (Eval Injection)
      category: security
      technology:
        - bash
        - curl
      confidence: MEDIUM
      references:
        - https://owasp.org/Top10/A03_2021-Injection
      subcategory:
        - vuln
      likelihood: MEDIUM
      impact: MEDIUM
    mode: taint
    pattern-sources:
      - pattern: "$(curl ...)"
    pattern-sinks:
      - pattern: "eval ..."

  - id: curl-pipe-bash
    languages:
      - bash
    severity: WARNING
    message: >
      Data is being piped into bash from a curl command. An attacker with
      control of the server in the curl command could inject malicious code
      into the pipe, resulting in a system compromise. Avoid piping untrusted
      data into bash or any other shell if you can. If you must do this,
      consider checking the SHA sum of the content returned by the server to
      verify its integrity.
    metadata:
      owasp:
        - A03:2021 - Injection
      cwe:
        - CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code (Eval Injection)
      category: security
      technology:
        - bash
        - curl
      confidence: LOW
      references:
        - https://owasp.org/Top10/A03_2021-Injection
      subcategory:
        - audit
      likelihood: LOW
      impact: LOW
    patterns:
      - pattern-either:
          - pattern: "curl ... | ... bash ..."
          - pattern: "curl ... | ... /bin/bash ..."
          - pattern: "... bash <(curl ...)"
          - pattern: "... /bin/bash <(curl ...)"
          - pattern: "... bash -c \"$(curl ...)\""
          - pattern: "... /bin/bash -c \"$(curl ...)\""

  - id: ifs-tampering
    languages:
      - bash
    severity: WARNING
    message: >
      The special variable IFS affects how splitting takes place when expanding
      unquoted variables. Don't set it globally. Prefer a dedicated utility such
      as 'cut' or 'awk' if you need to split input data. If you must use 'read',
      set IFS locally using e.g. 'IFS=\",\" read -a my_array'.
    pattern: "IFS=..."
    metadata:
      cwe:
        - CWE-20: Improper Input Validation
      category: security
      technology:
        - bash
      confidence: LOW
      owasp:
        - A03:2021 - Injection
      references:
        - https://owasp.org/Top10/A03_2021-Injection
      subcategory:
        - audit
      likelihood: LOW
      impact: LOW

